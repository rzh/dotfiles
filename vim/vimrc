"NeoBundle Scripts-----------------------------
if has('vim_starting')
  if &compatible
    set nocompatible               " Be iMproved
  endif

  " Required:
  set runtimepath+=~/.vim/bundle/neobundle.vim/
endif

" Required:
call neobundle#begin(expand('~/.vim/bundle'))

" Let NeoBundle manage NeoBundle
" Required:
NeoBundleFetch 'Shougo/neobundle.vim'

" disable vimproc/vimshell for now
NeoBundle 'Shougo/vimproc.vim', {
        \   'build' : {
        \     'windows' : 'tools\\update-dll-mingw',
        \     'cygwin' : 'make -f make_cygwin.mak',
        \     'mac' : 'make -f make_mac.mak',
        \     'linux' : 'make',
        \     'unix' : 'gmake',
        \   }
        \ }
" Add or remove your Bundles here:
NeoBundle 'Shougo/neosnippet.vim'
NeoBundle 'Shougo/neosnippet-snippets'
NeoBundle 'tpope/vim-fugitive'
NeoBundle 'ctrlpvim/ctrlp.vim'
NeoBundle 'flazz/vim-colorschemes'

" airline
NeoBundle 'bling/vim-airline'

" haxe
NeoBundle 'jdonaldson/vaxe'

" just use go-vim
NeoBundle "fatih/vim-go"

" delimitMate
NeoBundle "Raimondi/delimitMate"

NeoBundle 'altercation/vim-colors-solarized'
NeoBundle 'jnurmine/Zenburn'

" syntastic
NeoBundle "scrooloose/syntastic"

" tagbar
NeoBundle "majutsushi/tagbar"

" tlib_vim
"""" Bundle "tomtom/tlib_vim"

" vim-addon-mw-utils
"" NeoBundle "MarcWeber/vim-addon-mw-utils"

" vim-sensible
NeoBundle "tpope/vim-sensible"

" YouCompleteMe
NeoBundle 'Valloric/YouCompleteMe', {
     \ 'build' : {
     \     'mac' : 'git submodule update --init --recursive; ./install.sh ',
     \     'linux' : 'git submodule update --init --recursive; ./install.sh ',
     \     'unix' : './install.sh --clang-completer --system-libclang --omnisharp-completer',
     \     'windows' : './install.sh --clang-completer --system-libclang --omnisharp-completer',
     \     'cygwin' : './install.sh --clang-completer --system-libclang --omnisharp-completer'
     \    }
     \ }
"" 
" vim-slime for tmux and repl
" Bundle "jpalardy/vim-slime"

" Bundle 'luochen1990/rainbow'
NeoBundle "kien/rainbow_parentheses.vim"

"""" Bundle 'ryanss/vim-hackernews'

" Python PEP8
NeoBundle 'nvie/vim-flake8'
NeoBundle 'vim-scripts/indentpython.vim'




"" NeoBundle 'Shougo/vimshell'

" Required:
call neobundle#end()

" Required:
filetype plugin indent on

" If there are uninstalled bundles found on startup,
" this will conveniently prompt you to install them.
"""" NeoBundleCheck
"End NeoBundle Scripts-------------------------


" filetype plugin indent off
set runtimepath+=$GOROOT/misc/vim

au Filetype go nnoremap <leader>v :vsp <CR>:exe "GoDef" <CR>

"" autocmd FileType go autocmd BufWritePre <buffer> Fmt

"" disable ctags
"" au BufWritePost *.go silent! !ctags -R --exclude=*.js &


filetype plugin indent on     " reuired


set nowrap        " don't wrap lines
set expandtab
set tabstop=4     " a tab is four spaces
set backspace=indent,eol,start
                  " allow backspacing over everything in insert mode
set autoindent    " always set autoindenting on
set copyindent    " copy the previous indentation on autoindenting
set number        " always show line numbers
set ruler         " Show cursor position.
set hidden        " Handle multiple buffers better.
set shiftwidth=4  " number of spaces to use for autoindenting
set shiftround    " use multiple of shiftwidth when indenting with '<' and '>'
set showmatch     " set show matching parenthesis
set ignorecase    " ignore case when searching
set smartcase     " ignore case if search pattern is all lowercase,
                  "    case-sensitive otherwise
set smarttab      " insert tabs on the start of a line according to
                  "    shiftwidth, not tabstop
set hlsearch      " highlight search terms
set incsearch     " show search matches as you type
set scrolloff=3   " Show 3 lines of context around the cursor.

set history=1000         " remember more commands and search history
set undolevels=1000      " use many muchos levels of undo
set wildignore=*.swp,*.bak,*.pyc,*.class
set title                " change the terminal's title
set visualbell           " don't beep
set noerrorbells         " don't beep

set nobackup
set noswapfile

nnoremap ; :

" change the mapleader from \ to ,
let mapleader=" "

nnoremap <Leader>p :CtrlPBuffer<CR>
nnoremap <Leader>f :CtrlP<CR>

" Splitting
map <Leader>- :split<CR>
map <Leader><bar> :vsplit<CR>

map <leader>gs :Gstatus<CR>
nnoremap <Leader>w :w<CR>
nnoremap <Leader>q :q<CR>
nnoremap <Leader>n :set invnumber<CR>

" Quickly edit/reload the vimrc file
" maps the ,ev and ,sv keys to edit/reload .vimrc.
nmap <silent> <leader>ev :e $MYVIMRC<CR>
nmap <silent> <leader>ew :so $MYVIMRC<CR>


" Removing search highlighting
nnoremap <ESC><ESC> :nohlsearch<CR>
nnoremap <Leader><Space> :nohlsearch<CR>

nmap <Leader>t :TagbarToggle<CR>

let g:SuperTabDefaultCompletionType = "context"


filetype plugin indent on
filetype plugin on
syntax on

" switch buffer faster
map <Leader><Leader>n :bn<cr>
map <Leader><Leader>p :bp<cr>
map <Leader><Leader>d :bd<cr>  

" enable mouse support
set mouse=a

" my functions
fu! FormatHammer()
	  %s/^\.\/reports\///g
	  %s/^249_/249,/g
	  %s/^rc0_/rc0,/g
	  %s/^rc1_/rc1,/g
	  %s/^rc2_/rc2,/g
	  %s/^rc2b_/rc2b,/g
	  %s/^rc3_/rc3,/g
	  %s/^260_/260,/g
	  %s/\/perf_test_data\.csv //g
	  1,$s/\//,/g
	  %s/_1-1//g
	  %s/_1-2//g
	  %s/_2-1//g
	  %s/_2-2//g
endfunction

noremap H ddkkp
noremap N ddp

" change ycm select key
let g:ycm_key_list_select_completion = ['<TAB>', '<Down>', '<Enter']

" now setup tmux
" Setup Slime for TMUX
let g:slime_target = "tmux"
let g:slime_paste_file = "$HOME/.slime_paste"
let g:slime_default_config = {"socket_name": "default", "target_pane": ":0.1"}

" let g:rainbow_active = 1

" setup go
let g:go_bin_path = expand("~/gosrc/bin")

let g:go_fmt_command = "goimports"
let g:go_fmt_autosave = 1
let g:go_auto_type_info = 0

au FileType go nmap <Leader>s <Plug>(go-implements)
au FileType go nmap <Leader>i <Plug>(go-info)
au FileType go nmap <Leader>gd <Plug>(go-doc)
au FileType go nmap <Leader>gv <Plug>(go-doc-vertical)
au FileType go nmap <leader>r <Plug>(go-test)
au FileType go nmap <Leader>e <Plug>(go-rename)

au FileType go nmap <Leader>ds <Plug>(go-def-split)
au FileType go nmap <Leader>dv <Plug>(go-def-vertical)
au FileType go nmap <Leader>dt <Plug>(go-def-tab)

au FileType go nmap gd <Plug>(go-def)



" enable Better Rainbow Parentheses https://github.com/kien/rainbow_parentheses.vim
let g:rbpt_max = 16
let g:rbpt_loadcmd_toggle = 0

au VimEnter * RainbowParenthesesToggle
au Syntax * RainbowParenthesesLoadRound
au Syntax * RainbowParenthesesLoadSquare
au Syntax * RainbowParenthesesLoadBraces

let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_javascript_eslint_exec = 'eslint_d'

" highlight current line
set cursorline
" hi CursorLine term=bold cterm=bold ctermbg=Black
hi CursorLine term=bold cterm=bold 

" make syntax off in diff mode
" if !&diff
"   syntax enable
" endif

""" set background=dark
"" let g:solarized_visibility = "high"
"" let g:solarized_contrast = "high"
"" let g:solarized_termcolors=256
"" " let g:solarized_termtrans = 1
"" colorscheme solarized

map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l
map <C-n> <C-W>w

highlight DiffAdd term=reverse cterm=bold ctermbg=green ctermfg=white
highlight DiffChange term=reverse cterm=bold ctermbg=cyan ctermfg=black
highlight DiffText term=reverse cterm=bold ctermbg=gray ctermfg=black
highlight DiffDelete term=reverse cterm=bold ctermbg=red ctermfg=black

let g:airline_powerline_fonts = 1

imap jj  <Esc>
map ff  <C-f>
map <Leader>j <C-f>
map <Leader>k <C-b>

"" across terminal copy
set clipboard=unnamed

hi SpellBad ctermfg=232 ctermbg=130 guifg=#080808 guibg=#af5f00
hi SpellCap ctermfg=232 ctermbg=118 guifg=#080808 guibg=#87ff00

highlight link SyntasticError SpellBad
highlight link SyntasticWarning SpellCap

"" change 
highlight ColorColumn ctermbg=235 guibg=#2c2d27
"" let &colorcolumn=join(range(81,999),",")
let &colorcolumn="81"

"" spell check
map <Leader>c :setlocal spell! spelllang=en_us<CR>
